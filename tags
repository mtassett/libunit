!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
BUFFER_SIZ	real-tests/ft_strlen/03_ft_strlen_size_bound.c	/^#define BUFFER_SIZ	/;"	d	file:
BUFFER_SIZ	real-tests/strlen2/03_strlen2_size_bound.c	/^#define BUFFER_SIZ	/;"	d	file:
BUFF_SIZE_GNL	framework/inc/libft.h	/^# define BUFF_SIZE_GNL	/;"	d
BUFF_SIZE_GNL	libft/inc/libft.h	/^# define BUFF_SIZE_GNL	/;"	d
CPU_RELAX	framework/inc/libft.h	/^# define CPU_RELAX(/;"	d
CPU_RELAX	libft/inc/libft.h	/^# define CPU_RELAX(/;"	d
CYA	framework/inc/libunit.h	/^# define CYA	/;"	d
EFAILURE	framework/inc/libunit.h	/^# define EFAILURE	/;"	d
EFORK	framework/inc/libunit.h	/^# define EFORK	/;"	d
EWTF	framework/inc/libunit.h	/^# define EWTF	/;"	d
GRN	framework/inc/libunit.h	/^# define GRN	/;"	d
INCVAL	real-tests/ft_strlen/03_ft_strlen_size_bound.c	/^#define INCVAL	/;"	d	file:
INCVAL	real-tests/ft_strlen/04_ft_strlen_dirty_buff.c	/^#define INCVAL	/;"	d	file:
INCVAL	real-tests/strlen2/03_strlen2_size_bound.c	/^#define INCVAL	/;"	d	file:
INCVAL	real-tests/strlen2/04_strlen2_dirty_buff.c	/^#define INCVAL	/;"	d	file:
LIBFT_H	framework/inc/libft.h	/^# define LIBFT_H$/;"	d
LIBFT_H	libft/inc/libft.h	/^# define LIBFT_H$/;"	d
LIBUNIT_H	framework/inc/libunit.h	/^# define LIBUNIT_H$/;"	d
RED	framework/inc/libunit.h	/^# define RED	/;"	d
RST	framework/inc/libunit.h	/^# define RST /;"	d
TAB0	framework/inc/libft.h	/^# define TAB0 /;"	d
TAB0	libft/inc/libft.h	/^# define TAB0 /;"	d
TAB1	framework/inc/libft.h	/^# define TAB1 /;"	d
TAB1	libft/inc/libft.h	/^# define TAB1 /;"	d
TAB2	framework/inc/libft.h	/^# define TAB2 /;"	d
TAB2	libft/inc/libft.h	/^# define TAB2 /;"	d
TAB3	framework/inc/libft.h	/^# define TAB3 /;"	d
TAB3	libft/inc/libft.h	/^# define TAB3 /;"	d
TAB4	framework/inc/libft.h	/^# define TAB4 /;"	d
TAB4	libft/inc/libft.h	/^# define TAB4 /;"	d
TAB5	framework/inc/libft.h	/^# define TAB5 /;"	d
TAB5	libft/inc/libft.h	/^# define TAB5 /;"	d
TAB6	framework/inc/libft.h	/^# define TAB6 /;"	d
TAB6	libft/inc/libft.h	/^# define TAB6 /;"	d
TAB7	framework/inc/libft.h	/^# define TAB7 /;"	d
TAB7	libft/inc/libft.h	/^# define TAB7 /;"	d
TAB8	framework/inc/libft.h	/^# define TAB8 /;"	d
TAB8	libft/inc/libft.h	/^# define TAB8 /;"	d
TAB9	framework/inc/libft.h	/^# define TAB9 /;"	d
TAB9	libft/inc/libft.h	/^# define TAB9 /;"	d
TABA	framework/inc/libft.h	/^# define TABA /;"	d
TABA	libft/inc/libft.h	/^# define TABA /;"	d
TABB	framework/inc/libft.h	/^# define TABB /;"	d
TABB	libft/inc/libft.h	/^# define TABB /;"	d
TABC	framework/inc/libft.h	/^# define TABC /;"	d
TABC	libft/inc/libft.h	/^# define TABC /;"	d
TEST_H	real-tests/test.h	/^#define TEST_H$/;"	d
TEST_H	tests/test.h	/^# define TEST_H$/;"	d
UNIT_FAIL	framework/inc/libunit.h	/^# define UNIT_FAIL(/;"	d
UNIT_TIMEOUT	framework/inc/libunit.h	/^# define UNIT_TIMEOUT	/;"	d
UNIT_TOT	framework/inc/libunit.h	/^# define UNIT_TOT(/;"	d
UTOA	framework/inc/libft.h	/^# define UTOA /;"	d
UTOA	libft/inc/libft.h	/^# define UTOA /;"	d
YLW	framework/inc/libunit.h	/^# define YLW	/;"	d
atoi_bignbr_42	real-tests/atoi/02_atoi_bignbr.c	/^int		atoi_bignbr_42(void)$/;"	f
atoi_bignbr_minus10kM	real-tests/atoi/02_atoi_bignbr.c	/^int		atoi_bignbr_minus10kM(void)$/;"	f
atoi_bignbr_minus42	real-tests/atoi/02_atoi_bignbr.c	/^int		atoi_bignbr_minus42(void)$/;"	f
atoi_bignbr_plus10kM	real-tests/atoi/02_atoi_bignbr.c	/^int		atoi_bignbr_plus10kM(void)$/;"	f
atoi_bignbr_plus42	real-tests/atoi/02_atoi_bignbr.c	/^int		atoi_bignbr_plus42(void)$/;"	f
atoi_blank_empty	real-tests/atoi/07_atoi_blanks.c	/^int		atoi_blank_empty(void)$/;"	f
atoi_blank_null	real-tests/atoi/07_atoi_blanks.c	/^int		atoi_blank_null(void)$/;"	f
atoi_blank_tab	real-tests/atoi/07_atoi_blanks.c	/^int		atoi_blank_tab(void)$/;"	f
atoi_blank_whsp	real-tests/atoi/07_atoi_blanks.c	/^int		atoi_blank_whsp(void)$/;"	f
atoi_blank	real-tests/atol/11_atol_blank.c	/^int		atoi_blank(void)$/;"	f
atoi_combo_blanknumspace	real-tests/atoi/09_atoi_combo.c	/^int		atoi_combo_blanknumspace(void)$/;"	f
atoi_combo_blanknumspacenum	real-tests/atoi/09_atoi_combo.c	/^int		atoi_combo_blanknumspacenum(void)$/;"	f
atoi_combo_charnum	real-tests/atoi/09_atoi_combo.c	/^int		atoi_combo_charnum(void)$/;"	f
atoi_combo_comma	real-tests/atoi/09_atoi_combo.c	/^int		atoi_combo_comma(void)$/;"	f
atoi_combo_hard2	real-tests/atoi/09_atoi_combo.c	/^int		atoi_combo_hard2(void)$/;"	f
atoi_combo_hard3	real-tests/atoi/09_atoi_combo.c	/^int		atoi_combo_hard3(void)$/;"	f
atoi_combo_hard	real-tests/atoi/09_atoi_combo.c	/^int		atoi_combo_hard(void)$/;"	f
atoi_combo_numsignnum2	real-tests/atoi/09_atoi_combo.c	/^int		atoi_combo_numsignnum2(void)$/;"	f
atoi_combo_numsignnum	real-tests/atoi/09_atoi_combo.c	/^int		atoi_combo_numsignnum(void)$/;"	f
atoi_combo_signstr	real-tests/atoi/09_atoi_combo.c	/^int		atoi_combo_signstr(void)$/;"	f
atoi_combo_signstrspacenum	real-tests/atoi/09_atoi_combo.c	/^int		atoi_combo_signstrspacenum(void)$/;"	f
atoi_combo_spacedblsignnumspace	real-tests/atoi/09_atoi_combo.c	/^int		atoi_combo_spacedblsignnumspace(void)$/;"	f
atoi_combo_spacenum	real-tests/atoi/09_atoi_combo.c	/^int		atoi_combo_spacenum(void)$/;"	f
atoi_combo_spacenumspace	real-tests/atoi/09_atoi_combo.c	/^int		atoi_combo_spacenumspace(void)$/;"	f
atoi_combo_spacesignnum2	real-tests/atoi/09_atoi_combo.c	/^int		atoi_combo_spacesignnum2(void)$/;"	f
atoi_combo_spacesignnum	real-tests/atoi/09_atoi_combo.c	/^int		atoi_combo_spacesignnum(void)$/;"	f
atoi_combo_spacestrnum	real-tests/atoi/09_atoi_combo.c	/^int		atoi_combo_spacestrnum(void)$/;"	f
atoi_combo_tabnumstr	real-tests/atoi/09_atoi_combo.c	/^int		atoi_combo_tabnumstr(void)$/;"	f
atoi_combo_tabstrnum	real-tests/atoi/09_atoi_combo.c	/^int		atoi_combo_tabstrnum(void)$/;"	f
atoi_dblsig_mm	real-tests/atoi/04_atoi_dblsig.c	/^int		atoi_dblsig_mm(void)$/;"	f
atoi_dblsig_mp	real-tests/atoi/04_atoi_dblsig.c	/^int		atoi_dblsig_mp(void)$/;"	f
atoi_dblsig_pm	real-tests/atoi/04_atoi_dblsig.c	/^int		atoi_dblsig_pm(void)$/;"	f
atoi_dblsig_pp	real-tests/atoi/04_atoi_dblsig.c	/^int		atoi_dblsig_pp(void)$/;"	f
atoi_hardtest	real-tests/atol/15_atol_hardtest.c	/^int		atoi_hardtest(void)$/;"	f
atoi_intmax	real-tests/atol/09_atol_intmax.c	/^int		atoi_intmax(void)$/;"	f
atoi_intmin	real-tests/atol/08_atol_intmin.c	/^int		atoi_intmin(void)$/;"	f
atoi_launcher	real-tests/atoi/00_atoi_launcher.c	/^uint32_t	atoi_launcher(void)$/;"	f
atoi_launcher	real-tests/atol/00_atol_launcher.c	/^uint32_t	atoi_launcher(void)$/;"	f
atoi_letter	real-tests/atol/02_atol_letter.c	/^int		atoi_letter(void)$/;"	f
atoi_nbr_10	real-tests/atoi/01_atoi_nbr.c	/^int		atoi_nbr_10(void)$/;"	f
atoi_nbr_16	real-tests/atoi/01_atoi_nbr.c	/^int		atoi_nbr_16(void)$/;"	f
atoi_nbr_1	real-tests/atoi/01_atoi_nbr.c	/^int		atoi_nbr_1(void)$/;"	f
atoi_nbr_ez	real-tests/atoi/01_atoi_nbr.c	/^int		atoi_nbr_ez(void)$/;"	f
atoi_nbr_intmax	real-tests/atoi/01_atoi_nbr.c	/^int		atoi_nbr_intmax(void)$/;"	f
atoi_nbr_intmin	real-tests/atoi/01_atoi_nbr.c	/^int		atoi_nbr_intmin(void)$/;"	f
atoi_nbr_minus100M	real-tests/atoi/01_atoi_nbr.c	/^int		atoi_nbr_minus100M(void)$/;"	f
atoi_nbr_minus100	real-tests/atoi/01_atoi_nbr.c	/^int		atoi_nbr_minus100(void)$/;"	f
atoi_nbr_minus100k	real-tests/atoi/01_atoi_nbr.c	/^int		atoi_nbr_minus100k(void)$/;"	f
atoi_nbr_minus10M	real-tests/atoi/01_atoi_nbr.c	/^int		atoi_nbr_minus10M(void)$/;"	f
atoi_nbr_minus10	real-tests/atoi/01_atoi_nbr.c	/^int		atoi_nbr_minus10(void)$/;"	f
atoi_nbr_minus10k	real-tests/atoi/01_atoi_nbr.c	/^int		atoi_nbr_minus10k(void)$/;"	f
atoi_nbr_minus1M	real-tests/atoi/01_atoi_nbr.c	/^int		atoi_nbr_minus1M(void)$/;"	f
atoi_nbr_minus1	real-tests/atoi/01_atoi_nbr.c	/^int		atoi_nbr_minus1(void)$/;"	f
atoi_nbr_minus1kM	real-tests/atoi/01_atoi_nbr.c	/^int		atoi_nbr_minus1kM(void)$/;"	f
atoi_nbr_minus1k	real-tests/atoi/01_atoi_nbr.c	/^int		atoi_nbr_minus1k(void)$/;"	f
atoi_nbr_neg	real-tests/atoi/01_atoi_nbr.c	/^int		atoi_nbr_neg(void)$/;"	f
atoi_nbr_plus100M	real-tests/atoi/01_atoi_nbr.c	/^int		atoi_nbr_plus100M(void)$/;"	f
atoi_nbr_plus100	real-tests/atoi/01_atoi_nbr.c	/^int		atoi_nbr_plus100(void)$/;"	f
atoi_nbr_plus100k	real-tests/atoi/01_atoi_nbr.c	/^int		atoi_nbr_plus100k(void)$/;"	f
atoi_nbr_plus10M	real-tests/atoi/01_atoi_nbr.c	/^int		atoi_nbr_plus10M(void)$/;"	f
atoi_nbr_plus10	real-tests/atoi/01_atoi_nbr.c	/^int		atoi_nbr_plus10(void)$/;"	f
atoi_nbr_plus10k	real-tests/atoi/01_atoi_nbr.c	/^int		atoi_nbr_plus10k(void)$/;"	f
atoi_nbr_plus1M	real-tests/atoi/01_atoi_nbr.c	/^int		atoi_nbr_plus1M(void)$/;"	f
atoi_nbr_plus1	real-tests/atoi/01_atoi_nbr.c	/^int		atoi_nbr_plus1(void)$/;"	f
atoi_nbr_plus1kM	real-tests/atoi/01_atoi_nbr.c	/^int		atoi_nbr_plus1kM(void)$/;"	f
atoi_nbr_plus1k	real-tests/atoi/01_atoi_nbr.c	/^int		atoi_nbr_plus1k(void)$/;"	f
atoi_nbr_pos	real-tests/atoi/01_atoi_nbr.c	/^int		atoi_nbr_pos(void)$/;"	f
atoi_nbrnletter	real-tests/atol/03_atol_nbrnletter.c	/^int		atoi_nbrnletter(void)$/;"	f
atoi_negnbr	real-tests/atol/05_atol_negnbr.c	/^int		atoi_negnbr(void)$/;"	f
atoi_negsign	real-tests/atol/06_atol_negsign.c	/^int		atoi_negsign(void)$/;"	f
atoi_nothing	real-tests/atol/13_atol_nothing.c	/^int		atoi_nothing(void)$/;"	f
atoi_null	real-tests/atol/14_atol_null.c	/^int		atoi_null(void)$/;"	f
atoi_posnneg	real-tests/atol/10_atol_posnneg.c	/^int		atoi_posnneg(void)$/;"	f
atoi_possign	real-tests/atol/07_atol_possign.c	/^int		atoi_possign(void)$/;"	f
atoi_raw_datanum	real-tests/atoi/08_atoi_raw.c	/^int		atoi_raw_datanum(void)$/;"	f
atoi_raw_numdata	real-tests/atoi/08_atoi_raw.c	/^int		atoi_raw_numdata(void)$/;"	f
atoi_sign_minus	real-tests/atoi/06_atoi_sign.c	/^int		atoi_sign_minus(void)$/;"	f
atoi_sign_plus	real-tests/atoi/06_atoi_sign.c	/^int		atoi_sign_plus(void)$/;"	f
atoi_spaces	real-tests/atol/04_atol_spaces.c	/^int		atoi_spaces(void)$/;"	f
atoi_str_abcdef	real-tests/atoi/05_atoi_str.c	/^int		atoi_str_abcdef(void)$/;"	f
atoi_str_char	real-tests/atoi/05_atoi_str.c	/^int		atoi_str_char(void)$/;"	f
atoi_str_hard	real-tests/atoi/05_atoi_str.c	/^int		atoi_str_hard(void)$/;"	f
atoi_str_numstr	real-tests/atoi/05_atoi_str.c	/^int		atoi_str_numstr(void)$/;"	f
atoi_str_spaces	real-tests/atoi/05_atoi_str.c	/^int		atoi_str_spaces(void)$/;"	f
atoi_str_strnum	real-tests/atoi/05_atoi_str.c	/^int		atoi_str_strnum(void)$/;"	f
atoi_test	real-tests/atoi/00_atoi_launcher.c	/^int			atoi_test(const char *str)$/;"	f
atoi_zero_minus	real-tests/atoi/03_atoi_zero.c	/^int		atoi_zero_minus(void)$/;"	f
atoi_zero_plus	real-tests/atoi/03_atoi_zero.c	/^int		atoi_zero_plus(void)$/;"	f
atoi_zero	real-tests/atoi/03_atoi_zero.c	/^int		atoi_zero(void)$/;"	f
atoi_zero	real-tests/atol/12_atol_zero.c	/^int		atoi_zero(void)$/;"	f
atol_nbr	real-tests/atol/01_atol_nbr.c	/^int		atol_nbr(void)$/;"	f
basic_test	tests/strlen/01_basic_test.c	/^int	basic_test(void)$/;"	f
big_test	tests/strlen/04_big_test.c	/^int	big_test(void)$/;"	f
buserror	tests/strlen/05_buserror.c	/^int		buserror(void)$/;"	f
clear_node	libft/src/get_next_line.c	/^static void	clear_node(t_list **alst, int fd)$/;"	f	file:
content_size	framework/inc/libft.h	/^	size_t			content_size;$/;"	m	struct:s_btree
content_size	framework/inc/libft.h	/^	size_t			content_size;$/;"	m	struct:s_dlst
content_size	framework/inc/libft.h	/^	size_t			content_size;$/;"	m	struct:s_list
content_size	libft/inc/libft.h	/^	size_t			content_size;$/;"	m	struct:s_btree
content_size	libft/inc/libft.h	/^	size_t			content_size;$/;"	m	struct:s_dlst
content_size	libft/inc/libft.h	/^	size_t			content_size;$/;"	m	struct:s_list
content	framework/inc/libft.h	/^	void			*content;$/;"	m	struct:s_btree
content	framework/inc/libft.h	/^	void			*content;$/;"	m	struct:s_dlst
content	framework/inc/libft.h	/^	void			*content;$/;"	m	struct:s_list
content	libft/inc/libft.h	/^	void			*content;$/;"	m	struct:s_btree
content	libft/inc/libft.h	/^	void			*content;$/;"	m	struct:s_dlst
content	libft/inc/libft.h	/^	void			*content;$/;"	m	struct:s_list
create_node	libft/src/get_next_line.c	/^static int		create_node(int fd, t_list **tmp, t_list **alst)$/;"	f	file:
create_str	libft/src/ft_strsplit.orig.c	/^static char		*create_str(const char *s, size_t *last, size_t *cur)$/;"	f	file:
ft_16set	libft/src/ft_utoa.c	/^static inline void	ft_16set(uint16_t *dst, uint16_t val)$/;"	f	file:
ft_atoi	libft/src/ft_atoi.c	/^int		ft_atoi(const char *str)$/;"	f
ft_atol	libft/src/ft_atol.c	/^int64_t	ft_atol(const char *str)$/;"	f
ft_atou	libft/src/ft_atou.c	/^uint32_t	ft_atou(const char *str)$/;"	f
ft_atoul	libft/src/ft_atoul.c	/^uint64_t	ft_atoul(const char *str)$/;"	f
ft_bzero	libft/src/ft_bzero.c	/^void	ft_bzero(void *s, size_t n)$/;"	f
ft_chrcnt	libft/src/ft_strsplit.orig.c	/^static size_t	ft_chrcnt(char const *s, char c)$/;"	f	file:
ft_del	libft/src/ft_del.c	/^void	ft_del(void *data, size_t siz)$/;"	f
ft_dlst_fstins	libft/src/ft_dlst_fstins.c	/^void	ft_dlst_fstins(t_dlst *dl, t_dlst *new)$/;"	f
ft_dlst_lstins	libft/src/ft_dlst_lstins.c	/^void	ft_dlst_lstins(t_dlst *dl, t_dlst *new)$/;"	f
ft_dlst_nxtins	libft/src/ft_dlst_nxtins.c	/^void	ft_dlst_nxtins(t_dlst *dl, t_dlst *new)$/;"	f
ft_dlst_prvins	libft/src/ft_dlst_prvins.c	/^void	ft_dlst_prvins(t_dlst *dl, t_dlst *new)$/;"	f
ft_dlstnew	libft/src/ft_dlstnew.c	/^t_dlst	*ft_dlstnew(void const *content, size_t content_size)$/;"	f
ft_getlsiz2	libft/src/ft_getlsiz.c	/^inline static size_t	ft_getlsiz2(int64_t nbr, size_t r)$/;"	f	file:
ft_getlsiz	libft/src/ft_getlsiz.c	/^size_t					ft_getlsiz(int64_t nbr)$/;"	f
ft_getnsiz2	libft/src/ft_getnsiz.c	/^static inline size_t	ft_getnsiz2(int32_t n, size_t r)$/;"	f	file:
ft_getnsiz	libft/src/ft_getnsiz.c	/^size_t					ft_getnsiz(int32_t n)$/;"	f
ft_getulsiz2	libft/src/ft_getulsiz.c	/^inline static size_t	ft_getulsiz2(uint64_t nbr, size_t r)$/;"	f	file:
ft_getulsiz	libft/src/ft_getulsiz.c	/^size_t					ft_getulsiz(uint64_t nbr)$/;"	f
ft_getunsiz	libft/src/ft_getunsiz.c	/^size_t	ft_getunsiz(uint32_t n)$/;"	f
ft_isalnum	libft/src/ft_isalnum.c	/^inline int	__attribute__((always_inline)) ft_isalnum(int c)$/;"	f
ft_isalpha	libft/src/ft_isalpha.c	/^inline int	__attribute__((always_inline)) ft_isalpha(int c)$/;"	f
ft_isascii	libft/src/ft_isascii.c	/^inline int	__attribute__((always_inline)) ft_isascii(int c)$/;"	f
ft_isblank	libft/src/ft_isblank.c	/^inline int	__attribute__((always_inline)) ft_isblank(int c)$/;"	f
ft_isdigit	libft/src/ft_isdigit.c	/^inline int	__attribute__((always_inline)) ft_isdigit(int c)$/;"	f
ft_islower	libft/src/ft_islower.c	/^inline int	__attribute__((always_inline)) ft_islower(int c)$/;"	f
ft_isprint	libft/src/ft_isprint.c	/^inline int	__attribute__((always_inline)) ft_isprint(int c)$/;"	f
ft_isspace	libft/src/ft_isspace.c	/^inline int	__attribute__((always_inline)) ft_isspace(int c)$/;"	f
ft_isupper	libft/src/ft_isupper.c	/^inline int	__attribute__((always_inline)) ft_isupper(int c)$/;"	f
ft_isxdigit	libft/src/ft_isxdigit.c	/^inline int	__attribute__((always_inline)) ft_isxdigit(int c)$/;"	f
ft_itoa_buf	libft/src/ft_itoa_buf.c	/^char	*ft_itoa_buf(int n, char *buf)$/;"	f
ft_itoabase	libft/src/ft_itoabase.c	/^char			*ft_itoabase(int num, int base)$/;"	f
ft_itoa	libft/src/ft_itoa.c	/^char	*ft_itoa(int n)$/;"	f
ft_join	libft/src/get_next_line.c	/^static size_t	ft_join(char **dst, char *src, t_node *node, bool jump)$/;"	f	file:
ft_join	libft/src/gnl.c	/^static size_t	ft_join(char **line, char *buf, char *bak, bool jmp)$/;"	f	file:
ft_lstadd	libft/src/ft_lstadd.c	/^void	ft_lstadd(t_list **alst, t_list *new)$/;"	f
ft_lstdel	libft/src/ft_lstdel.c	/^void	ft_lstdel(t_list **alst, void (*del)(void *, size_t))$/;"	f
ft_lstdelone	libft/src/ft_lstdelone.c	/^void	ft_lstdelone(t_list **alst, void (*del)(void*, size_t))$/;"	f
ft_lstiter	libft/src/ft_lstiter.c	/^void	ft_lstiter(t_list *lst, void (*f)(t_list *elem))$/;"	f
ft_lstmap	libft/src/ft_lstmap.c	/^t_list	*ft_lstmap(t_list *lst, t_list *(*f)(t_list *elem))$/;"	f
ft_lstnew	libft/src/ft_lstnew.c	/^t_list	*ft_lstnew(void const *content, size_t content_size)$/;"	f
ft_ltoa	libft/src/ft_ltoa.c	/^char	*ft_ltoa(int64_t n)$/;"	f
ft_memalloc	libft/src/ft_memalloc.c	/^void	*ft_memalloc(size_t size)$/;"	f
ft_memccpy	libft/src/ft_memccpy.c	/^void	*ft_memccpy(void *dst, void const *src, int c, size_t n)$/;"	f
ft_memchr	libft/src/ft_memchr.c	/^void	*ft_memchr(void const *s, int c, size_t n)$/;"	f
ft_memcmp	libft/src/ft_memcmp.c	/^int		ft_memcmp(void const *s1, void const *s2, size_t n)$/;"	f
ft_memcpy	libft/src/ft_memcpy.c	/^void	*ft_memcpy(void *dst, void const *src, size_t n)$/;"	f
ft_memdel	libft/src/ft_memdel.c	/^inline void	__attribute__((always_inline)) ft_memdel(void **ap)$/;"	f
ft_memdup	libft/src/ft_memdup.c	/^void	*ft_memdup(void *addr, size_t siz)$/;"	f
ft_memmove	libft/src/ft_memmove.c	/^void	*ft_memmove(void *dst, void const *src, size_t n)$/;"	f
ft_memset	libft/src/ft_memset.c	/^void	*ft_memset(void *p, int c, size_t n)$/;"	f
ft_power	libft/src/ft_power.c	/^size_t	ft_power(size_t base, size_t power)$/;"	f
ft_print_memory	libft/src/ft_print_memory.c	/^void			*ft_print_memory(void *addr, size_t size)$/;"	f
ft_putchar_fd	libft/src/ft_putchar_fd.c	/^inline void	__attribute__((always_inline)) ft_putchar_fd(char c, int fd)$/;"	f
ft_putchar	libft/src/ft_putchar.c	/^inline void	__attribute__((always_inline)) ft_putchar(char c)$/;"	f
ft_putendl_fd	libft/src/ft_putendl_fd.c	/^inline void	__attribute__((always_inline)) ft_putendl_fd(char const *s, int fd)$/;"	f
ft_putendl	libft/src/ft_putendl.c	/^inline void	__attribute__((always_inline)) ft_putendl(char const *s)$/;"	f
ft_putnbr_fd	libft/src/ft_putnbr_fd.c	/^void	ft_putnbr_fd(int n, int fd)$/;"	f
ft_putnbr	libft/src/ft_putnbr.c	/^void	ft_putnbr(int n)$/;"	f
ft_putnbrhex	libft/src/ft_print_memory.c	/^static int		ft_putnbrhex(unsigned long nb, size_t length)$/;"	f	file:
ft_putnstr	libft/src/ft_print_memory.c	/^static void		ft_putnstr(unsigned char *str, size_t size, int hex)$/;"	f	file:
ft_putstr_fd	libft/src/ft_putstr_fd.c	/^inline void	__attribute__((always_inline)) ft_putstr_fd(char const *s, int fd)$/;"	f
ft_putstr	libft/src/ft_putstr.c	/^inline void	__attribute__((always_inline)) ft_putstr(char const *s)$/;"	f
ft_putunbr_fd	libft/src/ft_putunbr_fd.c	/^inline void	__attribute__((always_inline)) ft_putunbr_fd(size_t un, int fd)$/;"	f
ft_putunbr	libft/src/ft_putunbr.c	/^inline void	__attribute__((always_inline)) ft_putunbr(size_t un)$/;"	f
ft_realloc	libft/src/ft_realloc.c	/^int	ft_realloc(void **addr, size_t oldsiz, size_t newsiz)$/;"	f
ft_strcat	libft/src/ft_strcat.c	/^char	*ft_strcat(char *dest, const char *src)$/;"	f
ft_strccnt	libft/src/ft_strccnt.c	/^size_t	ft_strccnt(char *s, char c)$/;"	f
ft_strchr	libft/src/ft_strchr.c	/^char	*ft_strchr(const char *s, char c)$/;"	f
ft_strclr	libft/src/ft_strclr.c	/^inline void	__attribute__((always_inline)) ft_strclr(char *s)$/;"	f
ft_strcmp2	libft/src/ft_strcmp2.c	/^int		ft_strcmp2(char const *s1, char const *s2)$/;"	f
ft_strcmp	libft/src/ft_strcmp.c	/^int		ft_strcmp(const char *s1, const char *s2)$/;"	f
ft_strcpy	libft/src/ft_strcpy.c	/^char	*ft_strcpy(char *dest, const char *src)$/;"	f
ft_strdel	libft/src/ft_strdel.c	/^inline void	__attribute__((always_inline)) ft_strdel(char **as)$/;"	f
ft_strdup_mod	libft/src/ft_strsplit.orig.c	/^static char		*ft_strdup_mod(const char *s, size_t start, size_t end)$/;"	f	file:
ft_strdup	libft/src/ft_strdup.c	/^char	*ft_strdup(const char *src)$/;"	f
ft_strequ2	libft/src/ft_strequ2.c	/^bool	ft_strequ2(char const *s1, char const *s2)$/;"	f
ft_strequ	libft/src/ft_strequ.c	/^bool	ft_strequ(char const *s1, char const *s2)$/;"	f
ft_striter	libft/src/ft_striter.c	/^void	ft_striter(char *s, void (*f)(char *))$/;"	f
ft_striteri	libft/src/ft_striteri.c	/^void	ft_striteri(char *s, void (*f)(unsigned int, char *))$/;"	f
ft_strjoinf	libft/src/ft_strjoinf.c	/^char		*ft_strjoinf(char *s1, char *s2)$/;"	f
ft_strjoin	libft/src/ft_strjoin.c	/^char	*ft_strjoin(char const *s1, char const *s2)$/;"	f
ft_strlcat	libft/src/ft_strlcat.c	/^size_t	ft_strlcat(char *dest, const char *src, size_t size)$/;"	f
ft_strlen2	libft/src/ft_strlen2.c	/^size_t		ft_strlen2(const char *s)$/;"	f
ft_strlen	libft/src/ft_strlen.c	/^size_t		ft_strlen(const char *s)$/;"	f
ft_strmap	libft/src/ft_strmap.c	/^char	*ft_strmap(char const *s, char (*f)(char))$/;"	f
ft_strmapi	libft/src/ft_strmapi.c	/^char	*ft_strmapi(char const *s, char (*f)(unsigned int, char))$/;"	f
ft_strncat	libft/src/ft_strncat.c	/^char	*ft_strncat(char *dest, const char *src, size_t nb)$/;"	f
ft_strncmp	libft/src/ft_strncmp.c	/^int		ft_strncmp(const char *s1, const char *s2, size_t n)$/;"	f
ft_strncpy	libft/src/ft_strncpy.c	/^char	*ft_strncpy(char *dest, const char *src, size_t n)$/;"	f
ft_strnequ2	libft/src/ft_strnequ2.c	/^bool	ft_strnequ2(char const *s1, char const *s2, size_t n)$/;"	f
ft_strnequ	libft/src/ft_strnequ.c	/^bool	ft_strnequ(char const *s1, char const *s2, size_t n)$/;"	f
ft_strnew	libft/src/ft_strnew.c	/^char	*ft_strnew(size_t size)$/;"	f
ft_strnstr	libft/src/ft_strnstr.c	/^char	*ft_strnstr(const char *big, const char *little, size_t len)$/;"	f
ft_strrchr	libft/src/ft_strrchr.c	/^char	*ft_strrchr(const char *s, int c)$/;"	f
ft_strsplit	libft/src/ft_strsplit.c	/^char	**ft_strsplit(const char *s, char c)$/;"	f
ft_strsplit	libft/src/ft_strsplit.orig.c	/^char			**ft_strsplit(char const *s, char c)$/;"	f
ft_strstr	libft/src/ft_strstr.c	/^char	*ft_strstr(const char *haystack, const char *needle)$/;"	f
ft_strsub	libft/src/ft_strsub.c	/^char	*ft_strsub(char const *s, uint32_t start, size_t len)$/;"	f
ft_strtoul	libft/src/ft_strtoul.c	/^uint64_t	ft_strtoul(char *buf)$/;"	f
ft_strtrim	libft/src/ft_strtrim.c	/^char		*ft_strtrim(char const *s)$/;"	f
ft_strxjoin	libft/src/ft_strxjoin.c	/^char	*ft_strxjoin(size_t n, ...)$/;"	f
ft_tablen	libft/src/ft_tablen.c	/^size_t		ft_tablen(char **tab)$/;"	f
ft_tolower	libft/src/ft_tolower.c	/^inline int __attribute__((always_inline))	ft_tolower(int c)$/;"	f
ft_toupper	libft/src/ft_toupper.c	/^inline int __attribute__((always_inline))	ft_toupper(int c)$/;"	f
ft_utoa	libft/src/ft_utoa.c	/^char	*ft_utoa(char *buf, uint64_t n, size_t siz)$/;"	f
ft_utob	libft/src/ft_utob.c	/^char	*ft_utob(uint64_t n)$/;"	f
ft_utoh	libft/src/ft_utoh.c	/^char	*ft_utoh(uint64_t n)$/;"	f
ft_utoo	libft/src/ft_utoo.c	/^char	*ft_utoo(uint64_t n)$/;"	f
ft_wcslen	libft/src/ft_wcslen.c	/^size_t	ft_wcslen(const wchar_t *s)$/;"	f
ft_xfree	libft/src/ft_xfree.c	/^void	ft_xfree(size_t n, ...)$/;"	f
ft_xmalloc	libft/src/ft_xmalloc.c	/^void	*ft_xmalloc(size_t siz)$/;"	f
get_next_line	libft/src/get_next_line.c	/^int		get_next_line(int fd, char **line)$/;"	f
get_sub_siz	libft/src/ft_strsplit.c	/^static size_t	get_sub_siz(const char *str, char c)$/;"	f	file:
get_tab_row	libft/src/ft_strsplit.c	/^static size_t	get_tab_row(const char *s, char c)$/;"	f	file:
getnsiz_basic	real-tests/getnsiz/01_getnsiz_basic.c	/^int		getnsiz_basic(void)$/;"	f
getnsiz_launcher	real-tests/getnsiz/00_getnsiz_launcher.c	/^uint32_t	getnsiz_launcher(void)$/;"	f
getnsiz_limit	real-tests/getnsiz/02_getnsiz_limit.c	/^int		getnsiz_limit(void)$/;"	f
getnsiz_mid	real-tests/getnsiz/03_getnsiz_mid.c	/^int		getnsiz_mid(void)$/;"	f
getnsiz	framework/src/unit_print.c	/^static inline size_t	getnsiz(int n)$/;"	f	file:
getsiz_bin2	libft/src/getsiz_bin.c	/^inline static size_t	getsiz_bin2(uint64_t n, size_t r)$/;"	f	file:
getsiz_bin	libft/src/getsiz_bin.c	/^size_t					getsiz_bin(uint64_t n)$/;"	f
getsiz_hex2	libft/src/getsiz_hex.c	/^inline static size_t	getsiz_hex2(uint64_t n, size_t r)$/;"	f	file:
getsiz_hex	libft/src/getsiz_hex.c	/^size_t					getsiz_hex(uint64_t n)$/;"	f
getsiz_oct2	libft/src/getsiz_oct.c	/^inline static size_t	getsiz_oct2(uint64_t n, size_t r)$/;"	f	file:
getsiz_oct	libft/src/getsiz_oct.c	/^size_t					getsiz_oct(uint64_t n)$/;"	f
getunsiz_basic	real-tests/getunsiz/01_getunsiz_basic.c	/^int		getunsiz_basic(void)$/;"	f
getunsiz_launcher	real-tests/getunsiz/00_getunsiz_launcher.c	/^uint32_t	getunsiz_launcher(void)$/;"	f
getunsiz_limit	real-tests/getunsiz/02_getunsiz_limit.c	/^int		getunsiz_limit(void)$/;"	f
getunsiz_mid	real-tests/getunsiz/03_getunsiz_mid.c	/^int		getunsiz_mid(void)$/;"	f
gnl_worker	libft/src/get_next_line.c	/^static int		gnl_worker(t_node *n, char **line, char *buf)$/;"	f	file:
gnl	libft/src/gnl.c	/^int		gnl(int fd, char **line)$/;"	f
itoabase_base10	real-tests/ft_itoabase/01_itoabase_base10.c	/^int		itoabase_base10(void)$/;"	f
itoabase_base2	real-tests/ft_itoabase/02_itoabase_base2.c	/^int		itoabase_base2(void)$/;"	f
itoabase_check	real-tests/ft_itoabase/00_ft_itoabase_launcher.c	/^void		itoabase_check(char *str, char *good)$/;"	f
itoabase_launcher	real-tests/ft_itoabase/00_ft_itoabase_launcher.c	/^uint32_t	itoabase_launcher(void)$/;"	f
left	framework/inc/libft.h	/^	struct s_btree	*left;$/;"	m	struct:s_btree	typeref:struct:s_btree::s_btree
left	libft/inc/libft.h	/^	struct s_btree	*left;$/;"	m	struct:s_btree	typeref:struct:s_btree::s_btree
locate_separator	libft/src/gnl.c	/^static size_t	locate_separator(const char *str)$/;"	f	file:
main	real-tests/main.c	/^int		main(void)$/;"	f
main	tests/main.c	/^int		main(void)$/;"	f
memcmp_basic_equal	real-tests/memcmp/01_memcmp_basic_equal.c	/^int		memcmp_basic_equal(void)$/;"	f
memcmp_basic_siz2	real-tests/memcmp/04_memcmp_basic_siz2.c	/^int		memcmp_basic_siz2(void)$/;"	f
memcmp_basic_siz	real-tests/memcmp/03_memcmp_basic_siz.c	/^int		memcmp_basic_siz(void)$/;"	f
memcmp_basic_uneq	real-tests/memcmp/02_memcmp_basic_uneq.c	/^int		memcmp_basic_uneq(void)$/;"	f
memcmp_launcher	real-tests/memcmp/00_memcmp_launcher.c	/^uint32_t	memcmp_launcher(void)$/;"	f
memcmp_med_equal	real-tests/memcmp/05_memcmp_med_equal.c	/^int		memcmp_med_equal(void)$/;"	f
memcmp_med_uneq	real-tests/memcmp/06_memcmp_med_uneq.c	/^int		memcmp_med_uneq(void)$/;"	f
n_buf	framework/inc/libft.h	/^	char			*n_buf;$/;"	m	struct:s_node
n_buf	libft/inc/libft.h	/^	char			*n_buf;$/;"	m	struct:s_node
n_fd	framework/inc/libft.h	/^	int				n_fd;$/;"	m	struct:s_node
n_fd	libft/inc/libft.h	/^	int				n_fd;$/;"	m	struct:s_node
next	framework/inc/libft.h	/^	struct s_dlst	*next;$/;"	m	struct:s_dlst	typeref:struct:s_dlst::s_dlst
next	framework/inc/libft.h	/^	struct s_list	*next;$/;"	m	struct:s_list	typeref:struct:s_list::s_list
next	libft/inc/libft.h	/^	struct s_dlst	*next;$/;"	m	struct:s_dlst	typeref:struct:s_dlst::s_dlst
next	libft/inc/libft.h	/^	struct s_list	*next;$/;"	m	struct:s_list	typeref:struct:s_list::s_list
null_test	tests/strlen/02_null_test.c	/^int		null_test(void)$/;"	f
prev	framework/inc/libft.h	/^	struct s_dlst	*prev;$/;"	m	struct:s_dlst	typeref:struct:s_dlst::s_dlst
prev	libft/inc/libft.h	/^	struct s_dlst	*prev;$/;"	m	struct:s_dlst	typeref:struct:s_dlst::s_dlst
print_addr	libft/src/ft_print_memory.c	/^static void		print_addr(void *addr, size_t size)$/;"	f	file:
print_line	framework/src/unit_run.c	/^static void		print_line(const char *str)$/;"	f	file:
print_result	framework/src/unit_run.c	/^static int	print_result(int wstatus)$/;"	f	file:
print_sig	framework/src/unit_run.c	/^static int		print_sig(int sig)$/;"	f	file:
right	framework/inc/libft.h	/^	struct s_btree	*right;$/;"	m	struct:s_btree	typeref:struct:s_btree::s_btree
right	libft/inc/libft.h	/^	struct s_btree	*right;$/;"	m	struct:s_btree	typeref:struct:s_btree::s_btree
s_btree	framework/inc/libft.h	/^typedef struct		s_btree$/;"	s
s_btree	libft/inc/libft.h	/^typedef struct		s_btree$/;"	s
s_dlst	framework/inc/libft.h	/^typedef struct		s_dlst$/;"	s
s_dlst	libft/inc/libft.h	/^typedef struct		s_dlst$/;"	s
s_list	framework/inc/libft.h	/^typedef struct		s_list$/;"	s
s_list	libft/inc/libft.h	/^typedef struct		s_list$/;"	s
s_node	framework/inc/libft.h	/^typedef struct		s_node$/;"	s
s_node	libft/inc/libft.h	/^typedef struct		s_node$/;"	s
s_siz	framework/inc/libft.h	/^	size_t			s_siz;$/;"	m	struct:s_sstr
s_siz	libft/inc/libft.h	/^	size_t			s_siz;$/;"	m	struct:s_sstr
s_sstr	framework/inc/libft.h	/^typedef struct		s_sstr$/;"	s
s_sstr	libft/inc/libft.h	/^typedef struct		s_sstr$/;"	s
s_str	framework/inc/libft.h	/^	char			*s_str;$/;"	m	struct:s_sstr
s_str	libft/inc/libft.h	/^	char			*s_str;$/;"	m	struct:s_sstr
s_unit	framework/inc/libunit.h	/^typedef struct		s_unit$/;"	s
s_vec	framework/inc/libft.h	/^typedef struct		s_vec$/;"	s
s_vec	libft/inc/libft.h	/^typedef struct		s_vec$/;"	s
segv_test	tests/strlen/03_segv_test.c	/^int		segv_test(void)$/;"	f
strchr_launcher	real-tests/strchr/00_strchr_launcher.c	/^uint32_t	strchr_launcher(void)$/;"	f
strchr_search_abs	real-tests/strchr/03_strchr_search_abs.c	/^int		strchr_search_abs(void)$/;"	f
strchr_search_char	real-tests/strchr/01_strchr_search_char.c	/^int		strchr_search_char(void)$/;"	f
strchr_space	real-tests/strchr/02_strchr_space.c	/^int		strchr_space(void)$/;"	f
strlen2_basic	real-tests/strlen2/01_strlen2_basic.c	/^int		strlen2_basic(void)$/;"	f
strlen2_char_bound	real-tests/strlen2/02_strlen2_char_bound.c	/^int		strlen2_char_bound(void)$/;"	f
strlen2_dirty_buff	real-tests/strlen2/04_strlen2_dirty_buff.c	/^int		strlen2_dirty_buff(void)$/;"	f
strlen2_launcher	real-tests/strlen2/00_strlen2_launcher.c	/^uint32_t	strlen2_launcher(void)$/;"	f
strlen2_null	real-tests/strlen2/05_strlen2_null.c	/^int		strlen2_null(void)$/;"	f
strlen2_size_bound	real-tests/strlen2/03_strlen2_size_bound.c	/^int		strlen2_size_bound(void)$/;"	f
strlen_basic	real-tests/ft_strlen/01_ft_strlen_basic.c	/^int		strlen_basic(void)$/;"	f
strlen_char_bound	real-tests/ft_strlen/02_ft_strlen_char_bound.c	/^int		strlen_char_bound(void)$/;"	f
strlen_dirty_buff	real-tests/ft_strlen/04_ft_strlen_dirty_buff.c	/^int		strlen_dirty_buff(void)$/;"	f
strlen_launcher	real-tests/ft_strlen/00_ft_strlen_launcher.c	/^uint32_t	strlen_launcher(void)$/;"	f
strlen_launcher	tests/strlen/00_launcher.c	/^uint32_t	strlen_launcher(void)$/;"	f
strlen_null	real-tests/ft_strlen/05_ft_strlen_null.c	/^int		strlen_null(void)$/;"	f
strlen_size_bound	real-tests/ft_strlen/03_ft_strlen_size_bound.c	/^int		strlen_size_bound(void)$/;"	f
t_btree	framework/inc/libft.h	/^}					t_btree;$/;"	t	typeref:struct:s_btree
t_btree	libft/inc/libft.h	/^}					t_btree;$/;"	t	typeref:struct:s_btree
t_dlst	framework/inc/libft.h	/^}					t_dlst;$/;"	t	typeref:struct:s_dlst
t_dlst	libft/inc/libft.h	/^}					t_dlst;$/;"	t	typeref:struct:s_dlst
t_int128	framework/inc/libft.h	/^typedef __int128_t	t_int128;$/;"	t
t_int128	libft/inc/libft.h	/^typedef __int128_t	t_int128;$/;"	t
t_list	framework/inc/libft.h	/^}					t_list;$/;"	t	typeref:struct:s_list
t_list	libft/inc/libft.h	/^}					t_list;$/;"	t	typeref:struct:s_list
t_node	framework/inc/libft.h	/^}					t_node;$/;"	t	typeref:struct:s_node
t_node	libft/inc/libft.h	/^}					t_node;$/;"	t	typeref:struct:s_node
t_str	framework/inc/libft.h	/^}					t_str;$/;"	t	typeref:struct:s_sstr
t_str	libft/inc/libft.h	/^}					t_str;$/;"	t	typeref:struct:s_sstr
t_uint128	framework/inc/libft.h	/^typedef	__uint128_t	t_uint128;$/;"	t
t_uint128	libft/inc/libft.h	/^typedef	__uint128_t	t_uint128;$/;"	t
t_unit	framework/inc/libunit.h	/^}					t_unit;$/;"	t	typeref:struct:s_unit
t_vec	framework/inc/libft.h	/^}					t_vec;$/;"	t	typeref:struct:s_vec
t_vec	libft/inc/libft.h	/^}					t_vec;$/;"	t	typeref:struct:s_vec
timeout_test	tests/strlen/06_timeout.c	/^int		timeout_test(void)$/;"	f
u_name	framework/inc/libunit.h	/^	const char		*u_name;$/;"	m	struct:s_unit
u_next	framework/inc/libunit.h	/^	struct s_unit	*u_next;$/;"	m	struct:s_unit	typeref:struct:s_unit::s_unit
u_ret	framework/inc/libunit.h	/^	int				u_ret;$/;"	m	struct:s_unit
u_test	framework/inc/libunit.h	/^	int				(*u_test)(void);$/;"	m	struct:s_unit
unit_exec	framework/src/unit_run.c	/^static void	unit_exec(t_unit *list)$/;"	f	file:
unit_free	framework/src/unit_free.c	/^void	unit_free(t_unit *unit)$/;"	f
unit_load	framework/src/unit_load.c	/^int		unit_load(t_unit **alst, const char *name, int (*test_fun)(void))$/;"	f
unit_log	framework/src/unit_log.c	/^void					unit_log(t_unit *unit, int reset)$/;"	f
unit_out	framework/src/unit_out.c	/^uint32_t	unit_out(t_unit **first, int total, int fail)$/;"	f
unit_print	framework/src/unit_print.c	/^int						unit_print(uint32_t r)$/;"	f
unit_run	framework/src/unit_run.c	/^int		unit_run(t_unit *list, int *tot)$/;"	f
unit_strlen	framework/src/unit_log.c	/^static inline size_t	unit_strlen(const char *str)$/;"	f	file:
v_data	framework/inc/libft.h	/^	void			**v_data;$/;"	m	struct:s_vec
v_data	libft/inc/libft.h	/^	void			**v_data;$/;"	m	struct:s_vec
v_lim	framework/inc/libft.h	/^	size_t			v_lim;$/;"	m	struct:s_vec
v_lim	libft/inc/libft.h	/^	size_t			v_lim;$/;"	m	struct:s_vec
v_siz	framework/inc/libft.h	/^	size_t			v_siz;$/;"	m	struct:s_vec
v_siz	libft/inc/libft.h	/^	size_t			v_siz;$/;"	m	struct:s_vec
vec_add	libft/src/vec_add.c	/^void	vec_add(t_vec *vec, void *addr)$/;"	f
vec_create	libft/src/vec_create.c	/^t_vec	*vec_create(size_t siz)$/;"	f
vec_free	libft/src/vec_free.c	/^void	vec_free(t_vec **vec)$/;"	f
vec_getindex	libft/src/vec_getindex.c	/^void	*vec_getindex(t_vec *vec, size_t index)$/;"	f
vec_init	libft/src/vec_init.c	/^void	vec_init(t_vec *vec, size_t siz)$/;"	f
vec_realloc	libft/src/vec_realloc.c	/^void	vec_realloc(t_vec **vec)$/;"	f
vec_set	libft/src/vec_set.c	/^int		vec_set(t_vec *vec, void *new, size_t index)$/;"	f
worker	libft/src/ft_itoabase.c	/^static void		worker(long val, int base, char *out, int *rank)$/;"	f	file:
worker	libft/src/ft_strjoinf.c	/^static void	worker(size_t siz, char *dst, char *src)$/;"	f	file:
write_num	framework/src/unit_print.c	/^static void				write_num(int i)$/;"	f	file:
write_result	framework/src/unit_log.c	/^static inline void		write_result(int res, int fd)$/;"	f	file:
